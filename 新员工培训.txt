新员工培训思想：
1.前期尽量严格一点，不要放养了，引导是好的
	20210426执行2个月后回顾1:
	严格是正确的，这样也会让自己花精力去研究如何培养
	但是不够严格，仍旧不够。
2.任务发布时间验收严格，不要让延期没有后果，造成随意延期不好的习惯。
  现在延期会导致工时增加。
	回顾1：
	延期会直接暴露问题，并进行严厉批评，改进方法为增加更多的工作时长
3.你应该把培训新员工也当做是自己的一种挑战，引起重视，这也是你的一种成长。
	absolutly
4.利用《原则》里面的方法————持续测试评估和考察员工
	仍旧在用
------------------------------------------------------------------------------------------------------------
总共发布的任务有多少？ 

新员工培训计划：
5.看一下新员工的学习情况？ 
		感觉任务快完成了，
		那么下一步呢？    
		这个是做了一个简单的Revit开发 ，
		下面又安排什么东西呢？
		还是继续学习吗？ 
		当然我们也需要人去产出，
	
	那你觉得他还欠缺些什么？ 
	1.遇到问题和解决问题的能力，如何合理地使用百度一些技术网站来解决自己的问题；
	X2.他还需要知道一些工程知识？ 但是这点我基础不足以支撑教学内容；
	回顾1：目前已经开始依赖于百度去解决，但是对百度出的答案的接收程度仍旧需要考察。
3.他需要更加熟练代码，能够读懂别人写的代码；
	回顾1：目前在开始接触我的代码，安排了一个小的任务给他
4.他需要能够修改我的代码
5.他需要独立完成一些新特性代码（在有代码可以参考的情况下）
	回顾1：已经学会的还是可以应用，虽然有些时候确实需要指导
	
6.在没有代码参考的情况下，查询API或者查找资料的方式实现
7.独立架构、重构一个小功能项目
-->8.通过任务发布学习各种杂项，如：如果需要安装包的制作要会一点，X服务器知识
		既然学习了数据库和robbin，
		那么肯定得把任务安排上，
		1.数据库任务：
			1.考察知识点：
				1.创建数据库
				2.创建两张表
				3.数据的增删改
				4.查询，左连接
			创建两张表，然后支持增加数据库字段的东西，删除数据库的东西，然后修改数据库的东西
			最后查询，然后查询的时候，需要使用到左连接的查询。
			
		V2.Robbin面板
			创建面板，
			然后两个按钮分别有两个不同的dll功能
			V1.一个是生成笛卡尔集
			2.另一个是另一个dll的，展现数据库相关的功能模块，展现数据库的如果可以，使用可停靠面板来处理。
		V3.将这个写成功能需求文档发出去比较好。
		clear
V9.一颗坚定的心，从事这个行业应该还是得不能时刻想着能放弃，有退路，在充分了解计算机以后，应该做一次谈话。
		专业，
		很多优势是长期才能看出来的，
		（说不定他比我更能知道如何使用良好的意识（经验）去做某件事）
-->回顾：
	可能我没有对他进行大方的鼓励，他现在已经打消了继续从事后端的念头。
	但是经过我的测试，我应该使用一个客观的评价去评判： 
	1.在被针对的时候，他是反应是转移话题和躲避
		如果有更好的做法，当然是勇敢承认错误
		其它的做法就是甩锅，但是这锅他可能甩不了，因为没有cooper
	2.他在与人打交道等方面，是有一点的能力的
	3.在对规则的遵守上面，他是非常好的。
	4.他在逻辑分析能力上的欠缺，导致他遇到问题解决问题的能力并不强
	5.他在基础上面的欠缺，并不能主动弥补
	6.他经不起测试，考验
	7.他在自己的能力各种方面，要么有认识误差，要么就是喜欢说谎。
		认识与实际并不匹配。
		
clear
	
~10.我现在培养的方式都是想早点让他学会某种能力，但是没有给他足够多是经验。
		说起来有点矛盾，如果可以通过经验更好地处理东西，那么这个经验却是需要积累的，但是却会习惯在前面一段时间就否定掉一个人。
		（我可以通过发布两个差不多的任务来进行验证）
11.有一些特点是可以看到的，但是因为技术能力问题却无法表达，这倒是有点可惜。
12.他适合公司吗？ 当然了，总比前面的要好一点。
13.不要疏于培养，尝试挖掘一下他的一些优点。
14.你需要corp，有点难但是得要。
15.使用任务发布的方式，去引导他读懂我的代码并可以修改，
	自己独立完成可能不太够，因为没有足够多的代码积累。
	所以先才需要他来给我修复一下小的Bug，然后也读懂我的代码逻辑。
	读懂大概的东西后，就可以在用的时候抄一下，理解并集成为他自己的。
	当然这些任务目前来说都是一些测试任务，
	V现在叫他做一些简单的，有产出的事，修复一下Bug？或者做一些可复制粘贴的功能模块。
	在完成任务的途中，会积累很多经验，也会发现问题，解决问题
	
培训课程：
-->
	主要培训一些视频里面不会教的东西，可以不完全讲清楚，但是要有引导。
	教程教我们如何写对代码，但是不会教我们如何处理问题。
	尽量不教教程或者可以百度到的东西
V1.面向对象是什么？不面向对象又有什么区别？
	面向对象
2.如何合理使用百度，如何读懂百度出来的东西
	经验分享
V3.计算机的体系结构（冯洛意曼体系）
	X芯片又是什么？
	计算机如何处理逻辑，逻辑的东西是如何
	X单片机？
	计算机的计算为什么都是1和0
~4.计算机到底能为不了解它的人做什么？ 
V5.为什么很讨厌重复的代码
	怎样才能不写重复的代码
	这就是为什么要面向对象设计
clear
现在已经学习到了一定的程度，也在通过发布任务去检测他的学习情况。
那么目前我并没有发现他的问题的机制，
他也没有提出一些问题，所以我无法得之他自己不知道的问题。

X那么如果去检测到他自己不知道的问题呢？ 
X1.首先通过他提交的代码去发现
X2.通过发布新的任务去发现（这个需要我提前知道会有什么问题）
X3.通过他反馈

V4.通过做新的项目，遇到新的问题就会暴露出来。

V-->第二次培训：
提出问题，检测问题，解决问题
	
1.讲讲软件设计思路的问题，
	软件设计思路？ 
	软件是生命周期：
	问题定义，可行性分析，总体描述，系统设计，编码，调试，测试，验收，运行，维护升级，废弃。
	
面对的用户，
什么时间抛出异常，
为什么要捕获异常，
也可以讲讲软件的设计，
什么叫用户友好性
	
3.https://www.cnblogs.com/163yun/p/9602716.html
4.
clear
	
你无法知道他到底某一个知识点是否学到，那么就出一些习题

imp:最好不要不假思索地汇报之前的问题
	我暴露了他们的进度缓慢的问题，
	这个问题是上次已经说过的，
	
最好的做法是知道进度并且汇报它，

最好主动汇报，
但是你的主要问题仍旧是应该花一点心思过去，别放养。
我们又害怕他们问问题，又害怕他们不问问题。
我们害怕他们问问题是怕问没有意思，没有经过大脑思考的问题
害怕他们不问问题是怕他们不知道哪些东西
	当然这个可以通过，测试来解决。
	他们缺少经验，那么下一步是给他们足够多的锻炼机会。
	
他们的沟通表达能力有一点问题，
丁聪会隐藏问题

听院长的出测试
我是不是有冲突？
一方面是希望能培养他独立思考的能力，
一方面又希望为了加快他的进度给他灌输讲解知识。
你觉得有问题吗？ 
目前来说，是有问题的
为什么？ 
目前暴露的问题是，他们确实有点慢了，
为什么说他们慢，
在预计时间外还没有完成发布的内容

我并没有真正地深入讨论过他们的这个问题，我只是发现了问题，这是对的
我必须要承认这一点，
那么如果我重新做一个汇报呢？ 
~我目前的解决方案是什么？
1.进度，目前可以独立完成一些任务，目前测试完成的有包括一些二次开发和C#程序逻辑任务。这是已经完成的
2.目前发现的问题：
	1.设计的软件不够健壮，能跑通逻辑但是编码的软件设计思路上考虑非常不周全，也就是开发出来的软件是给自己用的，不是给用户用的。
	2.效率问题，未达到预期
		纵向对比，预期20天花了近2个月
		同比：冯老师花几分钟找到解决，他会花1~2天解决不出来一直卡着。
	3.
	
3.解决方案
	V1.继续保持995的工作作息
	V给一些压力：比如频繁的汇报
	当然目前来看动力他是有的
	2.增加沟通频率，这样可以看哪些问题是可以给他讲，哪些是需要他自己去探索的
	细化问题
	3.通过测试去检验知识点
4.实践，如何去做：
	1.一方面是上面的解决方案；
	2.另一方面是准备实施新员工培训2.0

imp:别向领导汇报不深入的东西，这是在忽悠。

给他们一点实际的锻炼机会
需求导向的教学

-->要作为一个整体去培养，不要单独讲解。
	他们两个之间有技术交流是非常好的。
clear 

-->一定要用文档去总结并形成方法
	记录下来一定要梳理
	并分享
clear   

-->培训经验记录：
	1.确定规矩需要阐述清楚背后的原则449；
	2.针对沟通交流问题开晨会是实践过的很有效的手段；
	3.针对学习问题，加班是理所当然的，但实际执行的时候可以适当宽松。
	4.
clear

-->在后面做实际项目的时候，
	如果他们不能按照规定时间和完成目标，
	不能允许他们拖，
	要求他们主动提交给上级来完成。
	clear

V-->第三次分享会
	主题？
	能不能跟他们现在的学习阶段相关？ 
	
	他们现在到了什么阶段？ 
	1.
	
	详细讲讲编译原理
	计算机如何从高级到汇编，再到CPU的
	或者讲讲数据结构？
	或者讲讲
clear
	
-->新员工培训2.0：
	目前已经独立完成了一下任务，
	下面：
	1.检查一下任务完成的结果；
		他可能有很多地方是需要完善的，比如如何让用户使用起来更好。
	2.比对一下你认为他培训到了的和还未具有的能力，然后针对这些能力制定下一阶段的培训。
	3.制定下一阶段的培训计划，
	
	慢慢参与项目可以让他们学得很快，
	那么检验一下他们会些什么，
	然后看看是否符合标准
	
	他们目前在处理开发插件的任务
	如果插件能在这里面开发出来，
	
	那么你觉得他们所欠缺的：
	1.规范化的代码编写；
		必须遵守，通过所有的代码，修改，来形成习惯。
	2.考虑充分的编程逻辑；
		无Bug，无隐藏问题；
		通过审查代码
	3.效率； 		     
	    开发周求要求严格，这点很重要，不过我们可以通过发布一些简单的功能模块去检验。
	4.反复修改用户需求的耐心；
		作为新的需求
	5.前端设计；
		教一下stackpanel就好了
	X6.需求分析他们需要会吗？ 
		这个是经验之谈，不作要求
	X7.大型架构思路
		这个也是经验之谈，不作要求 
	8.熟悉公司编程习惯；
		公共控件，需要熟悉，遇见再说了，或者自己写也是可以的，这个了解为主，不熟悉最好不好修改，不用也没有关系。
	9.
	
clear

-->新员工目前的状况20210302
	1.学习动力足
	2.工作大部分时间是在学习
	3.效率仍旧低
	4.代码质量不高
		1.如何评判代码质量？
			1.代码规范；
			2.尽量少的bug；
			3.合理的封装（也不要过于强调）；
			4.符合常人的正确程序设计以及逻辑思维。
		2.
	5.产出低
		目前对我来说没有起到什么作用
		没有在项目上帮到我，当然我也没有发布任务，因为我觉得他们还不一定能够参与进来。
		也没有太多的任务安排给他们对吗？
		不对，如果他们效率够高，现在已经可以参与进来了才是
	6.工作效率并不高
	7.其实我下个阶段可以根据他们的能力，将一些简单的活交给他们做
		心理有点顾忌，为什么？ 
		V1.因为他们达不到规范，害怕修改我的源码，然后会照成麻烦
			这个关系不大，使用svn,进行版本管理。
		V2.公司的知识产权问题，害怕他们拿着服务器的代码，然后作为自己的	但是目前他们并没有能消化我的代码，光看代码是非常枯燥而且困难的，如果我不讲解他们将会花很长的时间去消化。
		由于公司很注重版权，所以不能将源代码交予他们。
	8.他们的开发知识仍旧欠缺，所以他们往往不知道发布的任务的具体需求是什么
-->新员工培训3.0
	问题：
	1.丁聪：基础专业知识薄弱
		需要找到解决的方案
		
		
		
	2.袁平：已经可以上手一些独立的插件开发
		可以进行下一阶段的培训，
		目前在安排一个新特性的修改任务，
		通过这个任务，可以初步接触了解更多的东西：
			1.我的代码架构
			2.代码实现逻辑，习惯
			3.如何看懂别人的代码，
			4.如何和别人合作完成某个项目；
			5.如何沟通
		
		
		
	仍然欠缺的点：
			1.一些小的坏习惯需要校验，一些好的习惯需要培养	
			2.
			3.
			4.
			5.
-->当表达不清楚的时候
	1.使用思维导图
	2.确定是否是没有理解还是表达能力问题
	3.可以切换表达方式

clear		
		

clear	

clear 

-->新员工目前状态0323
	丁聪：学习更加务实了一些，能主动汇报自己的问题，
		在晨报的时候之前无法详细说明，被细致问了回答不上，多次施压细问以后发现并提出了自己的一些问题，最后在通过自己找方式来解决。
		
		学习主动性：积极
		学习能力：未知，目前看起来可以学进去
		逻辑思维能力：良
		学习态度：能接受新知识和方法，不抵触，态度较好
		其他问题：
			1.沟通能力问题：之前无法表达是因为专业基础不扎实，学习不专注。
		目前学习使用的方式：
			1.XMind软件辅助，视频教程辅助
			2.流程：1.学习第一遍，自己能说明->2.可以阐述给其他人听->3.出题检测是否掌握重点知识->4.带着问题去复习。
			3.保持晨报习惯，保持高频率的沟通
			4.学习比较偏向于使用经验，有遇到问题解决问题的能力，
			但是表述能力比较弱，能有基本的逻辑概念，但是记忆不好，无法准确描述。
			（我之前也是这种情况，所以我用笔记本记下来仔细思考。）
			
		学习时长累计：11月入职以来4个月；
		产出情况：无太多产出，完成任务多为检验任务，不高效，质量不高
	-->袁平：调试能力欠缺，思维逻辑能力有一些问题，坏习惯未做更正，能有一些产出，在代码和建族方面具备一定能力，目前状态有缺点，也有能力。
		学习主动性：较为积极
		学习能力：可以学进去
		逻辑思维能力：逻辑思维并不严谨，抽象思维能力不强，很难描述确定的因果关系，不擅于下定论。
		
		学习态度：能知道自己的一些问题，但是有一些地方需要使用一定的方式让其改正。
		沟通能力：有所适应和增强，可以与包括生产人员进行直接沟通。
		工作态度：目前良好。
		其他问题： 
			1.打字坏习惯没有主动改正
			2.效率技巧接受较慢，比如快捷键的使用等，操作不顺畅
			3.欠缺主动发现问题，总结问题，并改正问题的能力
		目前学习使用的方式： 
			1.针对调试花时间的问题：
				1.采用现场指导
				2.制定规则：1.先考虑清楚要做什么；2.将要发生什么；3.再进行操作（）
				3.保持晨报习惯，讲代码习惯，高频度沟通
		学习时长：3个月
		产出情况：1.目前有独立建简单族能力
				  2.
		clear
clear		

-->沟通的时候，应该对事不对人
	事情没有弄好，确实是个问题。
	但是最主要还是一个 connection断掉的原因，因为根本原因总是会断掉的，只是一个触发点而已。
	
	投资与风险：
	up:
	1.风险是迟早会暴露的，只是触发点的问题;
	2.就事论事确实是我应该秉承的，不知不觉引入到了人的身上；
	
	down:
	2.投入是较大的，但是这当然也是值得的不是吗;
	
	3.当局者迷，我并不能完全找出自己的问题所在。
	
clear 
		
-->新员工目前状态0416
	袁平已于4月初离职，不再培养
	丁聪：现在做事比较着急，遇到问题处理问题的方式是，先百度，然后根据答案去解决问题。
		  优：1.快速解决问题
			  2.积累问题处理经验
		  劣：1.不利于知识体系的构建
			  2.不会得到正确而稳定的成长
			  3.最后可能因为基础不牢靠，无法进一步发挥自身价值
			  4.
			  
	分析原因：1.猜想有可能是想进一步证明自己的实力；
			    1.因为劳动报酬上面是我无法涉及的，所以我无法有一个概念，就连我如何晋升我也没有客观一点的信息；所以我也只是在初步探索。
				企业团队当然想的是，你不要进步，然后一直保持能胜任这份工作的水平，然后一直产出；
				也就是企业现在缺的是什么人？ 能够胜任，然后一直保持不变的人。
				那么为什么又会有原则提到，需要优秀的人才？ 
				优秀的人才可以发挥更多的效益。
				胜任的基础上面，主观上再进一步发挥价值（边际价值？）。
				而衡量的标准是产值，不是吗？
				这是公司方面的衡量，
				个人上面的衡量呢？ 
				个人上面完全是靠自己的工作量，以及比对出来的技术能力，或者了解市场后再进行衡量。
	解决方案：目前只能通过慢慢引导的方式去处理；
	成绩记录：开始对于解析json，非常迷惑，但是经过详细的讲解，最后仍旧学会了如何组织json。
			  可以得出结论，证明确实是应该细节地教，然后他是一定能学得会的。
	
	那么下面，建议仍旧是使用一个系统化的培训方式
	然后再通过实际的工作中去检验是否具体学习掌握到某个知识点
	
	所以下一步的教学或者检验计划是什么呢？ 目的仍旧是让丁聪具备开发能力
	应该安排一些什么东西呢？ 
	1.维护已经有的项目，对新需求的处理，以及已有的BUG维护
		时间要求相对宽松，但是部分较为困难。
	2.参与进新的项目研发
		这种时间要求比较紧急，考验的应变能力。
	3.还是维护已有的项目比较好
		为什么？
		这样出错后的风险会低很多
		而新的项目风险较高，时间比较紧迫，所以应该在能力比较稳定的时候做。
	4.如果我可以自由安排，那么我肯定会安排已经好的项目给丁聪处理。
		但是现在仍旧没有给他配置SVN账户
		可能时机还没有到来？ 
		那么我应对的方式呢？ 
	
	5.
clear

-->新员工培训3.0
	1.目前员工状态： 
		1.手上有生产部门的二次开发任务2个
			1.应该是有相应的资料可以找到，也是可以实现的
			2.也有相应的方法去实现的
		2.工作态度： 
			1.工作态度较为松散
			2.并无太大时间压力
				1.但是生产部门虽然没有给时间压力，但是研发出来确实是有实用价值的，也就是马上研发出来，马上就能用上。
			3.
		-->3.管理： 
			1.由于部门合并事宜，暂时取消了晨报，导致我对他的状况管理松散；
			2.当然看来他并没有积极的态度，也并没有热情；
			3.由于部门合并事宜，目前我们对任务的执行态度并不坚决；
			4.由于部门合并事宜，目前我们对任务的目标等都不是十分明确和坚定，所以导致了第三条。
			5.由于团队部分不是我管辖的范围，所以我对整个部门的运行现状，目标，管理等信息相对单向且封闭。
			6.由于部门合并事宜，冯的工作内容变得庞杂，我目前装配式桥梁的主要任务有部分确实需要他来配合完成
				但是我也完全可以积极一点，把后面的版本的需求，可以独立完成的部分先研究并完成。
			7.
		clear
		-->应对松散的工作问题
		1.晨报(讨论昨天完成的，遇到的问题，以及今天需要处理的)
		2.使用项目管理工具进行管理Teambition等
		3.将目标细分
		4.前期的时间属于探索阶段，可以不准确，但是根据后面的探索结果，逐渐明确时间，最后在明确的时间后，安装约定发布版本，即使中间仍旧有未完成的项，那么将任务移到下一个版本，调整计划也要发布。
		5.
		
		clear 
			
		4.发展
			1.他希望从前端进行发展
		5.在甄别人上，你选择尝试性地培养有错吗？ 
			1.没有错，因为这是技能培训
			2.在客观层面，你觉得他的三观，性格等适合做这份工作吗？	  是的，我觉得他适合
			3.他有一些性格缺点你了解的对吧？ 
				是的，我了解，所以这些缺点在做决策时，
				我会充分考虑他们是否会带来风险。
			4.
		6.评判他是否有三次做到过自己希望他做的事
			1.接受加班的安排（以及其他的一些规则的制定）
			2.尝试突破自己无法表述的问题的缺点（这个正在做，未达成，是一个长期持续考量的东西）
			3.独立完成一个功能，而且不需要我的指导或者意见
				需要我的监督算不算呢？ 
				监督是应该的
		7.离职
			1.他们是在进行尝试，而尝试意味着，永远都有可选项
			2.他们是有退路的
			3.他们是自由的，并不受物质或者其它东西的控制
			4.他们是都在代码里面玩得开心和认真过
			5.他们未来仍旧（可能）想继续从事计算机这份工作
			6.他们都能找到有一些成就感在里面
			7.他们其实并不满足自己对他们的期望
				这有可能是我期望太高，但是确实我需要他们具有一些能力，能处理一些东西
			8.给他们的压力总体来说并不是很大，未严格执行，未有未达到需求的惩罚
			9.从事计算机也并不一定给他们一些期望的回报
			10.他们在性格方面是有一些缺陷
			11.但是如果有遇事逃避，或者固执等，影响到了项目的推进。这是不应该出现的
			12.未严格执行考核，未有未达到要求的惩戒行为
			13.导致他们可以无限制地延长计划
			14.他们未被交予更重要的任务
			15.
			16.

clear 		
-->新员工培训4.0
	从生产部门挑出了新的培训目标
	-->目前按照文档，我应该给他第一阶段的测试任务
	1.目前任务，应该是比较简单的那种，不需要为难。
		1.记录一个人在公司内哪里逗留了多少时间
			非常实用，简单版的应该也是可以完成的
			1.里面涉及的知识点：
				1.面向对象的编程思维
				2.简单的逻辑处理
				3.数据的整合? 以及功能设计
			2.该项目比较实用
		2.识别用户输入的字符串，然后计算结果
			1.该问题是非常复杂的算法问题，里面需要使用到栈
			2.该问题需要知道数据结构的一些东西，满二叉树树的遍历，先序转中序转后序
			3.更加偏向数据结构与算法
			4.但是说实话，他们没有必要涉及这么难的东西，这可以作为一个可选项
		3.数组中大于等于左侧所有数，小于等于右侧所有数的数
	 2.考验他是否有一个能力
	
	1.佳佳的优点：
		1.对计算机感兴趣；
		2.愿意通过自己的能力去专研需求，而且有些工作做得还不错；
		3.思维逻辑很强；
		4.
		
		
		
		
		
		
		
		
		
		
		
	
	
	
	
	




















clear 
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		